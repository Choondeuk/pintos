Kernel command line: -q run priority-fifo
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  68,710,400 loops/s.
Boot complete.
Executing 'priority-fifo':
(priority-fifo) begin
(priority-fifo) 16 threads will iterate 16 times in the same order each time.
(priority-fifo) If the order varies then there is a bug.
(priority-fifo) end
Execution of 'priority-fifo' complete.
Timer: 43 ticks
Thread: 0 idle ticks, 43 kernel ticks, 0 user ticks
Console: 556 characters output
Interrupt 0x0e (#PF Page-Fault Exception) at rip=8004218bfb
Kernel PANIC at ../../threads/thread.c:267 in thread_current(): assertion `t->status == THREAD_RUNNING' failed.
Call stack: 0x80042131a2 0x8004206ebe 0x8004209dc6 0x8004216230 0x800421634e 0x80042106a5 0x80042088bb 0x800420872f 0x8004208b16 0x8004207313 0x8004207603 0x8004206cea 0x800420973e 0x8004209b93 0x8004216267 0x800421634e 0x80042106a5 0x80042088bb 0x800420872f 0x8004208b16 0x800420987e 0x8004209d5d 0x80042162d5 0x8004216382 0x80042106a5 0x80042088bb 0x800420872f 0x8004208b16 0x8004207187.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Timer: 44 ticks
Thread: 0 idle ticks, 44 kernel ticks, 0 user ticks
Console: 1